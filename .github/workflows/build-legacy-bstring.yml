name: Build bstring (Legacy macOS)

on:
  push:
    paths:
      - 'textproc/bstring/**'
    branches: [main]
  pull_request:
    paths:
      - 'textproc/bstring/**'
    branches: [main]
  workflow_dispatch:
    inputs:
      vm_ip:
        description: 'Override TenSeven VM IP (optional, uses TENSEVEN_IP var if not provided)'
        required: false
        type: string
      macos_version:
        description: 'macOS version to test (tenseven, snowleopard, mountainlion)'
        required: false
        type: choice
        default: 'tenseven'
        options:
          - tenseven
          - snowleopard
          - mountainlion
          - mavericks
          - yosemite

env:
  # Default to TenSeven VM for now (only one configured)
  VM_IP: ${{ inputs.vm_ip || vars.TENSEVEN_IP }}
  VM_USERNAME: ${{ vars.TENSEVEN_USERNAME }}

jobs:
  build-bstring-tenseven:
    name: Build bstring on Mac OS X 10.7 (TenSeven)
    runs-on: [self-hosted, docker, ssh-capable]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Verify VM configuration
      run: |
        if [ -z "$VM_IP" ]; then
          echo "Error: VM_IP not set. Provide vm_ip input or set TENSEVEN_IP repository variable."
          exit 1
        fi
        if [ -z "$VM_USERNAME" ]; then
          echo "Error: VM_USERNAME not set. Set TENSEVEN_USERNAME repository variable."
          exit 1
        fi
        echo "Will connect to: $VM_USERNAME@$VM_IP"
    
    - name: Show macOS version on TenSeven VM
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          echo "=================================================="
          echo "  Building bstring on Mac OS X 10.7 (TenSeven)"
          echo "=================================================="
          sw_vers
          echo ""
          uname -a
    
    - name: Download repository tarball
      run: |
        echo "Downloading blakeports repository from GitHub..."
        curl -L -o /tmp/blakeports.tar.gz https://github.com/trodemaster/blakeports/archive/refs/heads/main.tar.gz
        echo "✅ Tarball downloaded: $(ls -lh /tmp/blakeports.tar.gz)"
    
    - name: Transfer tarball to TenSeven VM
      run: |
        echo "Transferring tarball to TenSeven VM..."
        scp -i /home/runner/.ssh/oldmac \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o HostKeyAlgorithms=+ssh-rsa \
            -o PubkeyAcceptedKeyTypes=+ssh-rsa \
            /tmp/blakeports.tar.gz \
            ${{ env.VM_USERNAME }}@${{ env.VM_IP }}:/tmp/
        echo "✅ Tarball transferred"
    
    - name: Extract repository on TenSeven VM
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          echo "Setting up blakeports directory..."
          
          # Create parent directory structure if needed
          mkdir -p /Users/blake/code
          
          # Remove old blakeports directory contents (but keep the directory)
          if [ -d /Users/blake/code/blakeports ]; then
            echo "Cleaning existing /Users/blake/code/blakeports..."
            rm -rf /Users/blake/code/blakeports/*
            rm -rf /Users/blake/code/blakeports/.[!.]*
          else
            echo "Creating /Users/blake/code/blakeports..."
            mkdir -p /Users/blake/code/blakeports
          fi
          
          # Extract fresh tarball
          cd /Users/blake/code/blakeports
          echo "Extracting tarball to $(pwd)..."
          tar xzf /tmp/blakeports.tar.gz --strip-components=1
          
          # Cleanup tarball
          rm /tmp/blakeports.tar.gz
          
          echo "Repository extracted to: $(pwd)"
          echo "Contents: $(ls -la | head -10)"
          echo "✅ Repository ready"
    
    - name: Verify MacPorts installation and setup environment
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          set -x          # Show commands being executed
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          echo "Verifying MacPorts installation..."
          
          # Check if port command exists
          if ! command -v port &> /dev/null; then
            echo "❌ ERROR: MacPorts not found. Please install MacPorts on this VM."
            exit 1
          fi
          
          # Show MacPorts version
          echo "MacPorts version:"
          port version
          
          # Setup BlakePorts environment
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          # Update port index for BlakePorts
          echo "Updating port index..."
          portindex
          
          echo "✅ MacPorts verified and BlakePorts index updated"
    
    - name: Lint portfile
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          set -x          # Show commands being executed
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          echo "Linting textproc/bstring portfile..."
          LINT_OUTPUT=$(port lint --nitpick textproc/bstring 2>&1)
          echo "$LINT_OUTPUT"
          
          # Check if lint found any errors
          if echo "$LINT_OUTPUT" | grep -q "Error:"; then
            echo "❌ Lint failed with errors"
            exit 1
          fi
          
          echo "✅ Lint passed"
    
    - name: Clean existing bstring installation
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          echo "Cleaning existing bstring installation..."
          sudo port -f uninstall bstring || true
          sudo port clean --dist bstring
          
          echo "✅ Clean complete"
    
    - name: Install dependencies
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        command_timeout: 30m
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          set -x          # Show commands being executed
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          
          echo "Installing bstring dependencies..."
          ./scripts/install-deps bstring
          
          echo "✅ Dependencies installed"
    
    - name: Build bstring port
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        command_timeout: 30m
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          set -x          # Show commands being executed
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          echo "Building bstring port..."
          sudo port -v install bstring
          
          echo "✅ Build complete"
    
    - name: Verify bstring installation
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          echo "Verifying bstring installation..."
          port installed bstring
          
          echo "✅ Installation verified"
    
    - name: Test bstring with tests variant
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        command_timeout: 30m
        script: |
          set -e          # Exit on any error
          set -o pipefail # Catch errors in pipelines
          
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          cd /Users/blake/code/blakeports
          source ./setupenv.bash
          
          echo "Testing bstring with tests variant..."
          sudo port -v install bstring +tests
          
          echo "✅ Tests variant passed"
    
    - name: Cleanup
      if: always()
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ env.VM_IP }}
        username: ${{ env.VM_USERNAME }}
        key: ${{ secrets.TENSEVEN_KEY }}
        script: |
          # Source profile to load MacPorts and other tools into PATH
          if [ -f ~/.profile ]; then
            source ~/.profile
          fi
          
          echo "Cleaning up temporary files..."
          
          # Remove any leftover tarballs
          rm -f /tmp/blakeports.tar.gz
          
          # Note: /Users/blake/code/blakeports is kept for next run
          echo "✅ Cleanup complete (blakeports directory preserved for next run)"

