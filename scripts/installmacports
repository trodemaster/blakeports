#!/bin/bash
set -euo pipefail
IFS=$'\n\t'
shopt -s nullglob nocaseglob

# determine CPU architecture
ARCH=$(uname -m)
ARCH=${ARCH/x86_64/amd64}
ARCH=${ARCH/aarch64/arm64}

# get latest release version from github for macports
PORT_LATEST_RELEASE=$(curl -s https://api.github.com/repos/macports/macports-base/releases/latest | grep tag_name | cut -d '"' -f 4)
PORT_LATEST_RELEASE_NUMBER=${PORT_LATEST_RELEASE#v}

# get macOS operating system version long name including california parks using system_profiler
MACOS_VERSION=$(sw_vers --ProductVersion | cut -d . -f1)
MACOS_VERSION_NAME=$(awk '/SOFTWARE LICENSE AGREEMENT FOR macOS/' '/System/Library/CoreServices/Setup Assistant.app/Contents/Resources/en.lproj/OSXSoftwareLicense.rtf' | awk -F 'macOS ' '{print $NF}' | awk '{print substr($0, 0, length($0)-1)}')

# track if we need to sync macports
NEED_SYNC=false

# Set up blakeports symlink and directory structure
echo "Setting up BlakePorts directory structure..."
mkdir -p ~/code

# Create symlink if it doesn't exist
if [ ! -e ~/code/blakeports ]; then
  echo "Creating symlink to blakeports..."
  ln -s "$(pwd)" ~/code/blakeports
else
  echo "✓ BlakePorts already exists at ~/code/blakeports"
fi

# test for macports and install if not present
if [ ! -f /opt/local/bin/port ]; then
  echo "Installing macports..."
  if [[ $MACOS_VERSION -ge 26 ]]; then
    cd
    echo "macOS version $MACOS_VERSION is not supported by macports installer"
    echo "Attempting install from source..."
    curl -O https://distfiles.macports.org/MacPorts/MacPorts-${PORT_LATEST_RELEASE_NUMBER}.tar.bz2
    tar xf MacPorts-${PORT_LATEST_RELEASE_NUMBER}.tar.bz2
    cd MacPorts-${PORT_LATEST_RELEASE_NUMBER}/
    ./configure >/dev/null
    make >/dev/null
    sudo make install >/dev/null
    cd
    rm -rf MacPorts-${PORT_LATEST_RELEASE_NUMBER}*
  else
    MACPORTS_PKG="https://github.com/macports/macports-base/releases/download/${PORT_LATEST_RELEASE}/MacPorts-${PORT_LATEST_RELEASE_NUMBER}-${MACOS_VERSION}-${MACOS_VERSION_NAME}.pkg"
    echo $MACPORTS_PKG
    curl -s -L -o /tmp/macports.pkg $MACPORTS_PKG
    sudo installer -pkg /tmp/macports.pkg -target / || true
    rm /tmp/macports.pkg
    # MacPorts package installer handles initial sync, no need to sync again
  fi
  PORT_SYNC=true
else
  echo "✓ MacPorts already installed"
fi

# configure macports sources
SOURCES_CONF="/opt/local/etc/macports/sources.conf"
BLAKEPORTS_DIR="$HOME/code/blakeports"

# Check if blakeports is already configured as default
echo "Checking sources.conf configuration..."
echo "BLAKEPORTS_DIR: ${BLAKEPORTS_DIR}"
echo "SOURCES_CONF: ${SOURCES_CONF}"
if [ -f "$SOURCES_CONF" ]; then
    echo "Current sources.conf contents:"
    cat "$SOURCES_CONF"
fi

if ! grep -q "file://${BLAKEPORTS_DIR} \\[default\\]" "$SOURCES_CONF" 2>/dev/null; then
    echo "Configuring blakeports as default MacPorts source..."
    sudo tee "$SOURCES_CONF" <<EOF
file://${BLAKEPORTS_DIR} [default]
https://mirror.fcix.net/macports/release/tarballs/ports.tar.gz
EOF
    echo "MacPorts sources.conf updated successfully"
    echo "blakeports directory set as default source"
    # Sources configuration was modified, we need to sync
    NEED_SYNC=true
else
    echo "✓ blakeports already configured as default source"
fi

# configure macports archive sites

# configure macports.conf

# add macports to path in .zshrc (idempotent)
if ! grep -q "# MacPorts configuration" ~/.zshrc 2>/dev/null; then
    cat << 'EOF' >> ~/.zshrc

# MacPorts configuration
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
export MANPATH="/opt/local/share/man:$MANPATH"
EOF
    echo "Added MacPorts configuration to .zshrc"
else
    echo "✓ MacPorts configuration already exists in .zshrc"
fi

# set up macports environment for current session
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
export MANPATH="/opt/local/share/man:$MANPATH"

# sync macports to update port index (only if needed)
if [[ "$NEED_SYNC" == "true" ]]; then
    echo "Syncing MacPorts port index..."
    sudo port sync
else
    echo "✓ Skipping port sync - no changes detected"
fi

echo "✓ MacPorts setup complete!"

exit 0
